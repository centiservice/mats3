// mats-util

dependencies {
    implementation project(':mats-api')
    implementation project(':mats-intercept-api')

    // The SFL4J API. Since you should provide the SLF4J implementation yourself, we use compileOnly.
    compileOnly "org.slf4j:slf4j-api:$slf4jVersion"

    // :: TEST

    // The Mats JMS Impl
    testImplementation project(':mats-impl-jms')
    // We need an implementation of the MatsSerializer, the MatsSerializerJson
    testImplementation project(':mats-serial-json')
    // We use the MatsFuturizer
    testImplementation project(':mats-util')
    // Mats SpringConfig, since we want to test the "debug info" from SpringConfig.
    testImplementation project(":mats-spring")
    // Mats Spring JMS, to test the Spring TX: JmsMatsTransactionManager_JmsAndSpringManagedSqlTx
    testImplementation project(":mats-spring-jms")
    testRuntimeOnly "org.springframework:spring-jdbc:$springVersion"

    // Spring
    testImplementation "org.springframework:spring-context:$springVersion"
    testImplementation "org.springframework:spring-tx:$springVersion"

    // We're testing SpringConfig, with @Inject.
    testImplementation "javax.inject:javax.inject:$javaxInjectVersion"

    // The JUnit library
    testImplementation "junit:junit:$junitVersion"

    // H2 Database, since we pull up a DB
    testImplementation "com.h2database:h2:$h2Version"

    // ActiveMQ quicksetup:
    testImplementation project(':mats-test-broker')
    // .. and pull in ActiveMQ Broker (since 'mats-test-activemq' does not transitively expose it, because _prod_).
    testImplementation "org.apache.activemq:activemq-broker:$activeMqVersion"

    // Include the logging and micrometer
    testImplementation project(":mats-intercept-logging")
    testImplementation project(":mats-intercept-micrometer")

    // Need logging system in tests
    testCompileOnly "org.slf4j:slf4j-api:$slf4jVersion"
    testRuntimeOnly "org.slf4j:log4j-over-slf4j:$slf4jVersion"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    // Base Jetty Server
    testImplementation "org.eclipse.jetty:jetty-server:$jettyVersion"
    // .. Jetty Servlets
    testImplementation "org.eclipse.jetty:jetty-webapp:$jettyVersion"
    // .. Jetty: To get the @WebListener etc. annotation scanning.
    testImplementation "org.eclipse.jetty:jetty-annotations:$jettyVersion"
}

mavenPublishing {
    pom {
        name = 'Mats^3 Introspector and Local Statistics'
        description = 'Mats^3 tool that can output an embeddable HTML describing a MatsFactory and all its' +
                ' endpoints, as well as "local statistics", gathered using a Mats Interceptor.'
    }
}
