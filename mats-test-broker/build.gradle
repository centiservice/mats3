// mats-test-broker

dependencies {
    // ActiveMQ BROKER, which is pretty much the sole reason for this module.
    // HOWEVER, this project is also pulled in by 'mats-spring-jms' as a part of that toolkit's testing readiness, and
    // we don't want the broker by default being included in "production" classpath, thus must be included specifically
    // by users of this testing-tool in their test compile paths.
    compileOnly "org.apache.activemq:activemq-broker:$activeMqVersion"
    // ..ActiveMQ Kaha - not needed for ordinary tests, but when using MatsTestBroker for setup for examples.
    compileOnly "org.apache.activemq:activemq-kahadb-store:$activeMqVersion"
    // The Apache ActiveMQ Artemis client and server.
    compileOnly "org.apache.activemq:artemis-jakarta-client:$artemisMqVersion"
    compileOnly "org.apache.activemq:artemis-server:$artemisMqVersion"

    // TESTING:

    // Bring in JUnit
    testImplementation "junit:junit:$junitVersion"
    // JMS API - to "handle" the ConnectionFactory - provided by 'mats-test' via 'implementation'.
    testCompileOnly "jakarta.jms:jakarta.jms-api:$jmsVersion"
    // Need logging system in tests
    testCompileOnly "org.slf4j:slf4j-api:$slf4jVersion"
    testRuntimeOnly "org.slf4j:log4j-over-slf4j:$slf4jVersion"
    testRuntimeOnly "ch.qos.logback:logback-classic:$logbackVersion"

    // Apache ActiveMQ broker (server), which is the default test backing broker. Also includes the client.
    testImplementation "org.apache.activemq:activemq-broker:$activeMqVersion"
    // Apache Artemis client and server.
    testImplementation "org.apache.activemq:artemis-jakarta-client:$artemisMqVersion"
    testImplementation "org.apache.activemq:artemis-server:$artemisMqVersion"
}

mavenPublishing {
    pom {
        name = 'Mats^3 Testing MQ Broker'
        description = 'Mats^3 Testing MQ Broker to easily create a MatsFactory backed by an in-vm MQ Broker.' +
                ' Also employed by several of the other Mats^3 testing tools. Default uses Apache ActiveMQ,' +
                ' but may be directed to use Apache Artemis instead.'
    }
}